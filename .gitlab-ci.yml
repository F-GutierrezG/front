image: docker
services:
  - docker:dind

variables:
  TAG: ${CI_COMMIT_REF_NAME}
  REGISTRY_REPO: registry.gitlab.com/gusisoft/onelike/front
  FRONT: front

stages:
  - test
  - build
  - registry
  - deploy

Tests:
  stage: test
  only:
    - devel
  before_script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make git
    - pip install docker-compose
  script:
    - docker-compose -f docker-compose-dev.yml build --no-cache
    - docker-compose -f docker-compose-dev.yml up -d
  after_script:
    - docker-compose -f docker-compose-dev.yml down

Build:
  stage: build
  only:
    - stage
    - master
  before_script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
  script:
    - docker-compose -f docker-compose-${CI_COMMIT_REF_NAME}.yml build --no-cache
  after_script:
    - docker-compose -f docker-compose-${CI_COMMIT_REF_NAME}.yml down

Front Stage:
  stage: registry
  only:
    - stage
  before_script:
    - apk add --no-cache git
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - export TAG=${CI_COMMIT_REF_NAME}_$COMMIT_TIME
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/front.git"
    - export FRONT_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}"
  script:
    - docker build $FRONT_REPO -t $FRONT:$CI_COMMIT_SHA --build-arg REACT_APP_AUTH_SERVICE_URL=${REACT_APP_AUTH_SERVICE_URL} --build-arg REACT_APP_COMPANIES_SERVICE_URL=${REACT_APP_COMPANIES_SERVICE_URL} --build-arg REACT_APP_NOTIFICATIONS_SERVICE_URL=${REACT_APP_NOTIFICATIONS_SERVICE_URL} --build-arg REACT_APP_SOCIAL_SERVICE_URL=${REACT_APP_SOCIAL_SERVICE_URL} --build-arg REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL} --build-arg REACT_APP_EXPORTER_SERVICE_URL=${REACT_APP_EXPORTER_SERVICE_URL} --build-arg REACT_APP_FACEBOOK_SERVICE_URL=${REACT_APP_FACEBOOK_SERVICE_URL} --build-arg REACT_APP_FACEBOOK_ID=${REACT_APP_FACEBOOK_ID} --build-arg REACT_APP_FACEBOOK_VERSION=${REACT_APP_FACEBOOK_VERSION} -f Dockerfile-${CI_COMMIT_REF_NAME}
    - docker tag $FRONT:$CI_COMMIT_SHA $REGISTRY_REPO/$FRONT:$TAG
    - docker push $REGISTRY_REPO/$FRONT:$TAG
  after_script:
    - docker image rm -f $(docker images registry.gitlab.com/gusisoft/onelike/front/front -q)

Front Production:
  stage: registry
  only:
    - master
  before_script:
    - apk add --no-cache git
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - export TAG=${CI_COMMIT_REF_NAME}_$COMMIT_TIME
    - docker login -u gitlab-ci-token -p $DOCKER_TOKEN registry.gitlab.com
    - export MAIN_REPO="https://${GITLAB_USER}:${GITLAB_PASSWORD}@gitlab.com/gusisoft/OneLike/front.git"
    - export FRONT_REPO="${MAIN_REPO}#${CI_COMMIT_REF_NAME}"
  script:
    - docker build $FRONT_REPO -t $FRONT:$CI_COMMIT_SHA --build-arg REACT_APP_AUTH_SERVICE_URL=${PROD_REACT_APP_AUTH_SERVICE_URL} --build-arg REACT_APP_COMPANIES_SERVICE_URL=${PROD_REACT_APP_COMPANIES_SERVICE_URL} --build-arg REACT_APP_NOTIFICATIONS_SERVICE_URL=${PROD_REACT_APP_NOTIFICATIONS_SERVICE_URL} --build-arg REACT_APP_SOCIAL_SERVICE_URL=${PROD_REACT_APP_SOCIAL_SERVICE_URL} --build-arg REACT_APP_USERS_SERVICE_URL=${PROD_REACT_APP_USERS_SERVICE_URL} --build-arg REACT_APP_EXPORTER_SERVICE_URL=${PROD_REACT_APP_EXPORTER_SERVICE_URL} --build-arg REACT_APP_FACEBOOK_SERVICE_URL=${REACT_APP_FACEBOOK_SERVICE_URL} --build-arg REACT_APP_FACEBOOK_ID=${PROD_REACT_APP_FACEBOOK_ID} --build-arg REACT_APP_FACEBOOK_VERSION=${PROD_REACT_APP_FACEBOOK_VERSION} -f Dockerfile-${CI_COMMIT_REF_NAME}
    - docker tag $FRONT:$CI_COMMIT_SHA $REGISTRY_REPO/$FRONT:$TAG
    - docker push $REGISTRY_REPO/$FRONT:$TAG
  after_script:
    - docker image rm -f $(docker images registry.gitlab.com/gusisoft/onelike/front/front -q)

Deploy Stage:
  stage: deploy
  only:
    - stage
  before_script:
    - apk add --no-cache openssh-client git
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - export TAG=${CI_COMMIT_REF_NAME}_$COMMIT_TIME
    - rm -rf ~/.ssh
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - sh ./${CI_COMMIT_REF_NAME}-deploy.sh

Deploy Production:
  stage: deploy
  only:
    - master
  before_script:
    - apk add --no-cache openssh-client git
    - export COMMIT_TIME=$(git show -s --format=%ct $CI_COMMIT_SHA)
    - export TAG=${CI_COMMIT_REF_NAME}_$COMMIT_TIME
    - rm -rf ~/.ssh
    - mkdir -p ~/.ssh
    - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - sh ./${CI_COMMIT_REF_NAME}-deploy.sh
